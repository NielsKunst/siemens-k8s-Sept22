Lab2 - type =  Node Port 
      Deploy.yml
--------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: goimage
  labels:
    app: goimage
spec:
  replicas: 3
  selector:
    matchLabels:
      app: goimage
  template:
    metadata:
      labels:
        app: goimage
    spec:
      containers:
      - name: goimage
        image: vaishalitapaswi/goimage:latest
        ports:
        - containerPort: 8090
-------------
      nodeport.yml
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  type: NodePort
  selector:
    app : goimage
  ports:
    - port: 8090
      targetPort: 8090
      nodePort: 30007
-----------------------
      use kubernetes to create deployment and service
      kubectl get deployments -o wide
      kubectl get services -o wide
      kubectl describe service my-service
            check endpoint
      connect to your node (docker ...on in terminal )-> docker exec containerid curl localhost:30007
      for goimage - check hostnames
      for other images - check dashboard/logs of pod 
      

Lab1 - 
      delete all earlier deployments/services (kubectl delete deployment/service name)
            
      Replace 
          kubectl create deployment s2 --image=vaishalitapaswi/goimage:latest --replicas=3
      with file option 
          https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
          copy deploy yml file(deploy.yml) and modify to suit ( kubectl create deployment s2 --image=vaishalitapaswi/goimage:latest --replicas=3)
          cmd>kubectl create -f deploy.yml
         cmd>minikube dashboard 
                    check pods, exec on each pod, curl/wget localhost:8090, check index.html
                    check logs for each pod
         modify dpeloy.yml to change number of replicas
         cmd>kubectl apply -f deploy.yml
         cmd>kubect edit deployment nameofdeployment
      Replace    
         kubectl expose deployment simple --name=simpleservice --port=8090 --target-port=8090 --type=LoadBalancer
      with file option
         search for service yml 
         create service.yml -> modify to expose earlier deployment
         kubectl create -f service.yml  
     
     cmd>minikube service  simpleservice
         browser -> run multiple times and check round robin for three servers
            delete any two pods , check service -> after new pods get started
